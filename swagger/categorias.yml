openapi: 3.0.3
info:
  title: "API for save text"
  version: 1.0.0
paths:
  /hola:
    get:
      summary: obtener un saludo
      tags:
        - hola
      responses:
        200:
          description: hola
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "hola"

  /user/create:
    post:
      summary: Create a user
      tags:
        - user
      requestBody: # Define los parámetros de entrada
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
                username:
                  type: string
                  example: "@example_UserName"
                full_name:
                  type: string
                  example: "Example Full Name"
              required:
                - email
                - password
                - username
                - full_name
      responses:
        201:
          description: Create user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User @example_UserName created successfully"

  /user/login:
    post:
      summary: Login
      tags:
        - user
      requestBody: # Define los parámetros de entrada
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
              required:
                - email
                - password
      responses:
        200:
          description: Login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "edwdh1DHDWNh4hwhda5n665dNHDFHfsfajdsnf..."

  /user/update-role:
    put:
      summary: update user
      tags:
        - user
      security:
        - admin: []
      requestBody: # Define los parámetros de entrada
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                role:
                  type: string
                  enum: ['user', 'admin']
                  example: "'user' or 'admin'"
              required:
                - email
                - role
      responses:
        201:
          description: Update user
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: "edwdh@example.com"
                  role:
                    type: string
                    example: "admin"                 

  /user/update-username:
    put:
      summary: update username
      tags:
        - user
      requestBody: # Define los parámetros de entrada
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
                username:
                  type: string
                  example: "@example_UserName"
              required:
                - email
                - password
                - username
      responses:
        201:
          description: Update username
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: "edwdh@example.com"
                  newUsername:
                    type: string
                    example: "@example_UserName"                 

  /user/delete:
    delete:
      summary: delete user
      tags:
        - user
      requestBody: # Define los parámetros de entrada
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
                username:
                  type: string
                  example: "@example_UserName"
              required:
                - email
                - password
                - username
      responses:
        201:
          description: delete user
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: bool
                    example: true
                  message:
                    type: string
                    example: "User deleted successfully"     