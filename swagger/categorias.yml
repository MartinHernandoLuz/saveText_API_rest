openapi: 3.0.3
info:
  title: "API for save text"
  version: 1.0.0
paths:
  /hola:
    get:
      summary: obtener un saludo
      tags:
        - hola
      responses:
        200:
          description: hola
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "hola"

  /user/create:
    post:
      summary: Create a user
      tags:
        - user
      requestBody: # Define los par치metros de entrada
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
                username:
                  type: string
                  example: "@example_UserName"
                full_name:
                  type: string
                  example: "Example Full Name"
              required:
                - email
                - password
                - username
                - full_name
      responses:
        201:
          description: Create user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User @example_UserName created successfully"

  /user/login:
    post:
      summary: Login
      tags:
        - user
      requestBody: # Define los par치metros de entrada
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
              required:
                - email
                - password
      responses:
        200:
          description: Login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "edwdh1DHDWNh4hwhda5n665dNHDFHfsfajdsnf..."

  /user/update-role:
    put:
      summary: update user
      tags:
        - user
      security:
        - admin: []
      requestBody: # Define los par치metros de entrada
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                role:
                  type: string
                  enum: ['user', 'admin']
                  example: "'user' or 'admin'"
              required:
                - email
                - role
      responses:
        201:
          description: Update user
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: "edwdh@example.com"
                  role:
                    type: string
                    example: "admin"                 

  /user/update-username:
    put:
      summary: update username
      tags:
        - user
      requestBody: # Define los par치metros de entrada
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
                username:
                  type: string
                  example: "@example_UserName"
              required:
                - email
                - password
                - username
      responses:
        201:
          description: Update username
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: "edwdh@example.com"
                  newUsername:
                    type: string
                    example: "@example_UserName"                 

  /user/delete:
    delete:
      summary: delete user
      tags:
        - user
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
                username:
                  type: string
                  example: "@example_UserName"
              required:
                - email
                - password
                - username
      responses:
        201:
          description: delete user
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: bool
                    example: true
                  message:
                    type: string
                    example: "User deleted successfully"     





  /notes/createNote:
    post:
      summary: create note
      tags:
        - notes
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
                user_username:
                  type: string
                  example: "@example_UserName"
                note_name:
                  type: string
                  example: "example title"                  
                text:
                  type: string
                  example: "hello world!"
              required:
                - email
                - password
                - username
                - note_name
                - text
      responses:
        201:
          description: create note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Note example title created successfully" 

  /notes/getNote:
    post:
      summary: get note by note name
      tags:
        - notes
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
                user_username:
                  type: string
                  example: "@example_UserName"
                note_name:
                  type: string
                  example: "example title"                  
              required:
                - email
                - password
                - username
                - note_name
      responses:
        201:
          description: create note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "saved text" 

  /notes/getAllNotes:
    post:
      summary: get all note names by username
      tags:
        - notes
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
                user_username:
                  type: string
                  example: "@example_UserName"               
              required:
                - email
                - password
                - username
      responses:
        201:
          description: create note
          content:
            application/json:
              schema:
                type: object
                properties:
                  notes:
                    type: array
                    example: [{"note_name":"first example title"}, {"note_name":"second example title"}] 

  /notes/deleteNote:
    delete:
      summary: delete note by name and username
      tags:
        - notes
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
                user_username:
                  type: string
                  example: "@example_UserName"
                note_name:
                  type: string
                  example: "example title"                  
              required:
                - email
                - password
                - username
                - note_name
      responses:
        201:
          description: create note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Note successfully deleted" 


  /notes/updateNoteName:
    put:
      summary: update note name
      tags:
        - notes
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
                user_username:
                  type: string
                  example: "@example_UserName"
                note_name:
                  type: string
                  example: "example title"     
                new_note_name:
                  type: string
                  example: "example new title"               
              required:
                - email
                - password
                - username
                - note_name
                - new_note_name
      responses:
        201:
          description: create note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "example title updated to example new title"       

  /notes/updateText:
    put:
      summary: update text
      tags:
        - notes
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "email@example.com"
                password:
                  type: string
                  format: password
                  example: "example_password"
                user_username:
                  type: string
                  example: "@example_UserName"
                note_name:
                  type: string
                  example: "example title"     
                new_text:
                  type: string
                  example: "new hello world!"               
              required:
                - email
                - password
                - username
                - note_name
                - new_text
      responses:
        201:
          description: create note
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "text updated successfully"              